{"remainingRequest":"/Users/chumbimbi/Desktop/Proyectos/AlertaChoco/alerta-choco-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/chumbimbi/Desktop/Proyectos/AlertaChoco/alerta-choco-ui/src/components/WebMap2.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/chumbimbi/Desktop/Proyectos/AlertaChoco/alerta-choco-ui/src/components/WebMap2.vue","mtime":1589156780850},{"path":"/Users/chumbimbi/Desktop/Proyectos/AlertaChoco/alerta-choco-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chumbimbi/Desktop/Proyectos/AlertaChoco/alerta-choco-ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/chumbimbi/Desktop/Proyectos/AlertaChoco/alerta-choco-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chumbimbi/Desktop/Proyectos/AlertaChoco/alerta-choco-ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KCmltcG9ydCB7IGxvYWRNb2R1bGVzIH0gZnJvbSAnZXNyaS1sb2FkZXInOwoKbGV0IF9GZWF0dXJlczsKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnd2ViLW1hcCcsCiAgd2F0Y2g6IHsKICAgIHRoaXMuX0ZlYXR1cmVzOiB7CiAgICAgIGltbWVkaWF0ZTogdHJ1ZSwKICAgICAgaGFuZGxlciAoX0ZlYXR1cmVzKSB7CiAgICAgICAgaWYgKCFfRmVhdHVyZXMpCiAgICAgICAgICByZXR1cm4KCiAgICAgICAgdGhpcy5zYXZlQWxlcnRzKF9GZWF0dXJlcykKICAgICAgfQogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgICBzYXZlQWxlcnRzKGZlYXR1cmVzKQogICAgICB7CiAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdVUERBVEVfQUxFUlRTJywgZmVhdHVyZXMpOwogICAgICB9CiAgfSwKICBtb3VudGVkKCkgewogICAgbG9hZE1vZHVsZXMoWydlc3JpL01hcCcsICdlc3JpL3ZpZXdzL01hcFZpZXcnLCAnZXNyaS9sYXllcnMvRmVhdHVyZUxheWVyJ10sIHsgY3NzOiB0cnVlIH0pCiAgICAgICAgLnRoZW4oKFtBcmNHSVNNYXAsIE1hcFZpZXcsIEZlYXR1cmVMYXllcl0pID0+IHsKCiAgICAgICAgY29uc3QgbWFwID0gbmV3IEFyY0dJU01hcCh7CiAgICAgICAgYmFzZW1hcDogJ2RhcmstZ3JheS12ZWN0b3InCiAgICAgICAgfSk7CgogICAgICAgIHRoaXMudmlldyA9IG5ldyBNYXBWaWV3KHsKICAgICAgICBjb250YWluZXI6IHRoaXMuJGVsLAogICAgICAgIG1hcDogbWFwLAogICAgICAgIGNlbnRlcjogWy03Ni43ODE1MDY2NzcyNDYsIDUuOTk0NDA2NTg0NDEwOTk1N10sIC8vIGxvbmdpdHVkZSwgbGF0aXR1ZGUKICAgICAgICB6b29tOiA3CiAgICAgICAgfSk7CgogICAgICAgIHZhciBtdW5pY2lwaW9zUmVuZGVyZXIgPSB7CiAgICAgICAgICAgIHR5cGU6ICJzaW1wbGUiLAogICAgICAgICAgICBzeW1ib2w6IHsKICAgICAgICAgICAgICAgICAgICB0eXBlOiAicGljdHVyZS1tYXJrZXIiLAogICAgICAgICAgICAgICAgICAgIHVybDogImh0dHBzOi8vaW1hZ2UuZmxhdGljb24uY29tL2ljb25zL3BuZy81MTIvMTAwMS8xMDAxMDIyLnBuZyIsCiAgICAgICAgICAgICAgICAgICAgd2lkdGg6ICIxOHB4IiwKICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6ICIxOHB4IgogICAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICB2YXIgbXVuaWNpcGlvc0xhYmVscyA9IHsKICAgICAgICAgICAgc3ltYm9sOiB7CiAgICAgICAgICAgIHR5cGU6ICJ0ZXh0IiwKICAgICAgICAgICAgY29sb3I6ICIjRkZGRkYiLAogICAgICAgICAgICBoYWxvQ29sb3I6ICIjZmYwMDAwIiwKICAgICAgICAgICAgaGFsb1NpemU6ICIwcHgiLAogICAgICAgICAgICBmb250OiB7CiAgICAgICAgICAgICAgICBzaXplOiAiMTJweCIsCiAgICAgICAgICAgICAgICBmYW1pbHk6ICJOb3RvIFNhbnMiLAogICAgICAgICAgICAgICAgc3R5bGU6ICJpdGFsaWMiLAogICAgICAgICAgICAgICAgd2VpZ2h0OiAibm9ybWFsIgogICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGxhYmVsUGxhY2VtZW50OiAiYmVsb3ctY2VudGVyIiwKICAgICAgICAgICAgbGFiZWxFeHByZXNzaW9uSW5mbzogewogICAgICAgICAgICBleHByZXNzaW9uOiAiJGZlYXR1cmUubXVuaWNpcGlvIgogICAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICB2YXIgYWxlcnRSZW5kZXJlciA9IHsKICAgICAgICAgICAgdHlwZTogInNpbXBsZSIsCiAgICAgICAgICAgIHN5bWJvbDogewogICAgICAgICAgICB0eXBlOiAicGljdHVyZS1tYXJrZXIiLAogICAgICAgICAgICB1cmw6ICJodHRwczovL2ltYWdlLmZsYXRpY29uLmNvbS9pY29ucy9zdmcvNTk5LzU5OTUwNi5zdmciLAogICAgICAgICAgICB3aWR0aDogIjI1cHgiLAogICAgICAgICAgICBoZWlnaHQ6ICIyNXB4IgogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIAogICAgICAgIHZhciBhbGVydFBvcHVwID0gewogICAgICAgICAgICAidGl0bGUiOiAie3RocmVhdH0iLAogICAgICAgICAgICAiY29udGVudCI6ICI8Yj5VYmljYWNpw7NuOjwvYj4ge2xvY2F0aW9ufTxicj48Yj5OaXZlbCBkZSBSaWVzZ286PC9iPiB7bGV2ZWx9PGJyPjxiPkZlY2hhOjwvYj4ge2RhdGV9IgogICAgICAgIH0KCiAgICAgICAgdmFyIG11bmljaXBpb3MgPSBuZXcgRmVhdHVyZUxheWVyKHsKICAgICAgICAgICAgdXJsOiAiaHR0cHM6Ly9zZXJ2aWNlczcuYXJjZ2lzLmNvbS9BR09wbTBBT2tOVGNxeHFhL2FyY2dpcy9yZXN0L3NlcnZpY2VzL211bmljaXBpb3Nfc3VicmVnaW9uX2Nob2NvL0ZlYXR1cmVTZXJ2ZXIvMCIsCiAgICAgICAgICAgIHJlbmRlcmVyOiBtdW5pY2lwaW9zUmVuZGVyZXIsCiAgICAgICAgICAgIGxhYmVsaW5nSW5mbzogbXVuaWNpcGlvc0xhYmVscwogICAgICAgIH0pOwoKICAgICAgICBtYXAuYWRkKG11bmljaXBpb3MpOyAgCgogICAgICAgIHZhciBhbGVydGFzPSBuZXcgRmVhdHVyZUxheWVyKHsKICAgICAgICAgICAgdXJsOiAiaHR0cHM6Ly9zZXJ2aWNlczcuYXJjZ2lzLmNvbS9BR09wbTBBT2tOVGNxeHFhL2FyY2dpcy9yZXN0L3NlcnZpY2VzL2FsZXJ0YXNfc3VicmVnaW9uX2Nob2NvX2VqZW1wbG8vRmVhdHVyZVNlcnZlci8wIiwKICAgICAgICAgICAgcmVuZGVyZXI6IGFsZXJ0UmVuZGVyZXIsCiAgICAgICAgICAgIG91dEZpZWxkczogWyJ0aHJlYXQiLCAibG9jYXRpb24iLCAibGV2ZWwiLCAiZGF0ZSIsICJPQkpFQ1RJRCJdLAogICAgICAgICAgICBwb3B1cFRlbXBsYXRlOiBhbGVydFBvcHVwCiAgICAgICAgfSk7CgogICAgICAgIG1hcC5hZGQoYWxlcnRhcyk7IAoKICAgICAgICAgdGhpcy52aWV3LndoZW5MYXllclZpZXcoYWxlcnRhcykudGhlbihmdW5jdGlvbihsYXllclZpZXcpewogICAgICAgICAgICAgICAgbGF5ZXJWaWV3LndhdGNoKCJ1cGRhdGluZyIsIGZ1bmN0aW9uKHZhbHVlKXsKICAgICAgICAgICAgICAgICAgICAvLyBhdmFpbGFibGVGaWVsZHMgd2lsbCBiZWNvbWUgYXZhaWxhYmxlCiAgICAgICAgICAgICAgICAgICAgLy8gb25jZSB0aGUgbGF5ZXIgdmlldyBmaW5pc2hlcyB1cGRhdGluZwogICAgICAgICAgICAgICAgICAgIGlmICghdmFsdWUpIHsKICAgICAgICAgICAgICAgICAgICBsYXllclZpZXcucXVlcnlGZWF0dXJlcyh7CiAgICAgICAgICAgICAgICAgICAgICAgIG91dEZpZWxkczogbGF5ZXJWaWV3LmF2YWlsYWJsZUZpZWxkcywKICAgICAgICAgICAgICAgICAgICAgICAgd2hlcmU6ICJPQkpFQ1RJRCA+IDAiCiAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgICAgICAudGhlbihmdW5jdGlvbihyZXN1bHRzKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIC8vdGhpcy5mZWF0dXJlcyA9IHJlc3VsdHMuZmVhdHVyZXMKICAgICAgICAgICAgICAgICAgICAgICAgX0ZlYXR1cmVzID0gcmVzdWx0cy5mZWF0dXJlcwogICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygiZmVhdG9yZXMgbGVuZ3RoIGlzICIgKyByZXN1bHRzLmZlYXR1cmVzLmxlbmd0aCkKICAgICAgICAgICAgICAgICAgICAgICAgLy92YXIgIHNvcnRlZERlc2NlbmRpbmcgPSByZXN1bHRzLmZlYXR1cmVzLnNvcnQoKGEsIGIpID0+IG5ldyBEYXRlKGEuZGF0ZSkgLSBuZXcgRGF0ZShiLmRhdGUpKS5yZXZlcnNlKCk7IAogICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAgICAgLmNhdGNoKGZ1bmN0aW9uKGVycm9yKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCJxdWVyeSBmYWlsZWQ6ICIsIGVycm9yKTsKICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfSk7CiAgICAgICAgfSk7ICAKICB9LAogIGJlZm9yZURlc3Ryb3koKSB7CiAgICBpZiAodGhpcy52aWV3KSB7CiAgICAgIC8vIGRlc3Ryb3kgdGhlIG1hcCB2aWV3CiAgICAgIHRoaXMudmlldy5jb250YWluZXIgPSBudWxsOwogICAgfQogIH0KfTsKCg=="},{"version":3,"sources":["WebMap2.vue"],"names":[],"mappings":";;;;;AAKA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"WebMap2.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div></div>\n</template>\n\n<script>\nimport { loadModules } from 'esri-loader';\n\nlet _Features;\n\nexport default {\n  name: 'web-map',\n  watch: {\n    this._Features: {\n      immediate: true,\n      handler (_Features) {\n        if (!_Features)\n          return\n\n        this.saveAlerts(_Features)\n      }\n    }\n  },\n  methods: {\n      saveAlerts(features)\n      {\n        this.$store.commit('UPDATE_ALERTS', features);\n      }\n  },\n  mounted() {\n    loadModules(['esri/Map', 'esri/views/MapView', 'esri/layers/FeatureLayer'], { css: true })\n        .then(([ArcGISMap, MapView, FeatureLayer]) => {\n\n        const map = new ArcGISMap({\n        basemap: 'dark-gray-vector'\n        });\n\n        this.view = new MapView({\n        container: this.$el,\n        map: map,\n        center: [-76.781506677246, 5.9944065844109957], // longitude, latitude\n        zoom: 7\n        });\n\n        var municipiosRenderer = {\n            type: \"simple\",\n            symbol: {\n                    type: \"picture-marker\",\n                    url: \"https://image.flaticon.com/icons/png/512/1001/1001022.png\",\n                    width: \"18px\",\n                    height: \"18px\"\n            }\n        }\n\n        var municipiosLabels = {\n            symbol: {\n            type: \"text\",\n            color: \"#FFFFF\",\n            haloColor: \"#ff0000\",\n            haloSize: \"0px\",\n            font: {\n                size: \"12px\",\n                family: \"Noto Sans\",\n                style: \"italic\",\n                weight: \"normal\"\n            }\n            },\n            labelPlacement: \"below-center\",\n            labelExpressionInfo: {\n            expression: \"$feature.municipio\"\n            }\n        }\n\n        var alertRenderer = {\n            type: \"simple\",\n            symbol: {\n            type: \"picture-marker\",\n            url: \"https://image.flaticon.com/icons/svg/599/599506.svg\",\n            width: \"25px\",\n            height: \"25px\"\n            }\n        }\n        \n        var alertPopup = {\n            \"title\": \"{threat}\",\n            \"content\": \"<b>Ubicaci√≥n:</b> {location}<br><b>Nivel de Riesgo:</b> {level}<br><b>Fecha:</b> {date}\"\n        }\n\n        var municipios = new FeatureLayer({\n            url: \"https://services7.arcgis.com/AGOpm0AOkNTcqxqa/arcgis/rest/services/municipios_subregion_choco/FeatureServer/0\",\n            renderer: municipiosRenderer,\n            labelingInfo: municipiosLabels\n        });\n\n        map.add(municipios);  \n\n        var alertas= new FeatureLayer({\n            url: \"https://services7.arcgis.com/AGOpm0AOkNTcqxqa/arcgis/rest/services/alertas_subregion_choco_ejemplo/FeatureServer/0\",\n            renderer: alertRenderer,\n            outFields: [\"threat\", \"location\", \"level\", \"date\", \"OBJECTID\"],\n            popupTemplate: alertPopup\n        });\n\n        map.add(alertas); \n\n         this.view.whenLayerView(alertas).then(function(layerView){\n                layerView.watch(\"updating\", function(value){\n                    // availableFields will become available\n                    // once the layer view finishes updating\n                    if (!value) {\n                    layerView.queryFeatures({\n                        outFields: layerView.availableFields,\n                        where: \"OBJECTID > 0\"\n                    })\n                    .then(function(results) {\n                        //this.features = results.features\n                        _Features = results.features\n                        console.log(\"featores length is \" + results.features.length)\n                        //var  sortedDescending = results.features.sort((a, b) => new Date(a.date) - new Date(b.date)).reverse(); \n                    })\n                    .catch(function(error) {\n                        console.log(\"query failed: \", error);\n                    });\n                    }\n                });\n            });\n        });  \n  },\n  beforeDestroy() {\n    if (this.view) {\n      // destroy the map view\n      this.view.container = null;\n    }\n  }\n};\n\n</script>\n\n<style scoped>\ndiv {\n  padding: 0;\n  margin: 0;\n  width: 100%;\n  height: 100%;\n}\n</style>"]}]}