{"remainingRequest":"/Users/chumbimbi/Desktop/Proyectos/AlertaChoco/alerta-choco-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/chumbimbi/Desktop/Proyectos/AlertaChoco/alerta-choco-ui/src/components/WebMap.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/chumbimbi/Desktop/Proyectos/AlertaChoco/alerta-choco-ui/src/components/WebMap.vue","mtime":1589582426896},{"path":"/Users/chumbimbi/Desktop/Proyectos/AlertaChoco/alerta-choco-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chumbimbi/Desktop/Proyectos/AlertaChoco/alerta-choco-ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/chumbimbi/Desktop/Proyectos/AlertaChoco/alerta-choco-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chumbimbi/Desktop/Proyectos/AlertaChoco/alerta-choco-ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGxvYWRNb2R1bGVzIH0gZnJvbSAnZXNyaS1sb2FkZXInOwppbXBvcnQgeyBtYXBTdGF0ZSB9IGZyb20gJ3Z1ZXgnCmltcG9ydCB7IEJCdXR0b24gfSBmcm9tICdib290c3RyYXAtdnVlJwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICd3ZWItbWFwJywKICBjb21wb25lbnRzOiB7IEJCdXR0b24gfSwKICBkYXRhKCkgeyByZXR1cm4geyBtdW5pY2lwaW9zVmlzaWJsZTogdHJ1ZSB9fSwKICBjb21wdXRlZDogbWFwU3RhdGUoWydtYXBDZW50ZXInXSksCiAgd2F0Y2g6IHsKICAgIG1hcENlbnRlcihuZXdWYWx1ZSkgewogICAgICAvL2NvbnNvbGUubG9nKGBXZWJNYXA6IFVwZGF0aW5nIGZyb20gJHtvbGRWYWx1ZVswXSArICIgIiArIG9sZFZhbHVlWzFdfSB0byAke25ld1ZhbHVlWzBdICsgIiAiICsgbmV3VmFsdWVbMV19YCk7CiAgICAgIHRoaXMuZ290VG8obmV3VmFsdWUpCiAgICB9LAogICAgbXVuaWNpcGlvc1Zpc2libGUoKSB7CiAgICAgIHRoaXMudmlldy5tYXAuZmluZExheWVyQnlJZCgnbXVuaWNpcGlvcycpLnZpc2libGUgPSAhdGhpcy52aWV3Lm1hcC5maW5kTGF5ZXJCeUlkKCdtdW5pY2lwaW9zJykudmlzaWJsZQogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgICBzZXRCdXR0b25UZXh0KCkgewogICAgICAgIHJldHVybiB0aGlzLm11bmljaXBpb3NWaXNpYmxlID8gIk1vc3RyYXIgbXVuaWNpcGlvcyBQREVUIiA6ICJPY3VsdGFyIG11bmljaXBpb3MgUERFVCIgCiAgICAgIH0sCiAgICAgIGdvdFRvKHB0KSB7CiAgICAgICAgdmFyIG9wdHMgPSB7CiAgICAgICAgICBkdXJhdGlvbjogMTAwMCAgLy8gRHVyYXRpb24gb2YgYW5pbWF0aW9uIHdpbGwgYmUgMSBzZWNvbmRzCiAgICAgICAgfTsKCiAgICAgICAgLy8gZ28gdG8gcG9pbnQgYXQgTE9EIDE1IHdpdGggY3VzdG9tIGR1cmF0aW9uCiAgICAgICAgdGhpcy52aWV3LmdvVG8oewogICAgICAgICAgdGFyZ2V0OiBwdCwKICAgICAgICAgIHpvb206IDEwCiAgICAgICAgfSwgb3B0cyk7CiAgICAgIH0sCiAgICAgIGRyYXdNYXAoKQogICAgICB7CiAgICAgICAgICAgIC8vIGxhenkgbG9hZCB0aGUgcmVxdWlyZWQgQXJjR0lTIEFQSSBmb3IgSmF2YVNjcmlwdCBtb2R1bGVzIGFuZCBDU1MKICAgICAgICBsb2FkTW9kdWxlcyhbJ2VzcmkvTWFwJywgJ2Vzcmkvdmlld3MvTWFwVmlldycsICdlc3JpL2xheWVycy9GZWF0dXJlTGF5ZXInXSwgeyBjc3M6IHRydWUgfSkKICAgICAgICAudGhlbigoW0FyY0dJU01hcCwgTWFwVmlldywgRmVhdHVyZUxheWVyXSkgPT4gewoKICAgICAgICBjb25zdCBtYXAgPSBuZXcgQXJjR0lTTWFwKHsKICAgICAgICBiYXNlbWFwOiAnZGFyay1ncmF5LXZlY3RvcicKICAgICAgICB9KTsKCiAgICAgICAgdGhpcy52aWV3ID0gbmV3IE1hcFZpZXcoewogICAgICAgIGNvbnRhaW5lcjogIm1hcERpdiIsCiAgICAgICAgbWFwOiBtYXAsCiAgICAgICAgY2VudGVyOiBbLTc2Ljc4MTUwNjY3NzI0NiwgNS45OTQ0MDY1ODQ0MTA5OTU3XSwgLy8gbG9uZ2l0dWRlLCBsYXRpdHVkZQogICAgICAgIHpvb206IDYKICAgICAgICB9KTsKCiAgICAgICAgdmFyIG11bmljaXBpb3NSZW5kZXJlciA9IHsKICAgICAgICAgICAgdHlwZTogInNpbXBsZSIsCiAgICAgICAgICAgIHN5bWJvbDogewogICAgICAgICAgICAgICAgICAgIHR5cGU6ICJwaWN0dXJlLW1hcmtlciIsCiAgICAgICAgICAgICAgICAgICAgdXJsOiAiaHR0cHM6Ly9pbWFnZS5mbGF0aWNvbi5jb20vaWNvbnMvcG5nLzUxMi8xMDAxLzEwMDEwMjIucG5nIiwKICAgICAgICAgICAgICAgICAgICB3aWR0aDogIjE4cHgiLAogICAgICAgICAgICAgICAgICAgIGhlaWdodDogIjE4cHgiCiAgICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIHZhciBtdW5pY2lwaW9zTGFiZWxzID0gewogICAgICAgICAgICBzeW1ib2w6IHsKICAgICAgICAgICAgdHlwZTogInRleHQiLAogICAgICAgICAgICBjb2xvcjogIiNGRkZGRiIsCiAgICAgICAgICAgIGhhbG9Db2xvcjogIiNmZjAwMDAiLAogICAgICAgICAgICBoYWxvU2l6ZTogIjBweCIsCiAgICAgICAgICAgIGZvbnQ6IHsKICAgICAgICAgICAgICAgIHNpemU6ICIxMnB4IiwKICAgICAgICAgICAgICAgIGZhbWlseTogIk5vdG8gU2FucyIsCiAgICAgICAgICAgICAgICBzdHlsZTogIml0YWxpYyIsCiAgICAgICAgICAgICAgICB3ZWlnaHQ6ICJub3JtYWwiCiAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgbGFiZWxQbGFjZW1lbnQ6ICJiZWxvdy1jZW50ZXIiLAogICAgICAgICAgICBsYWJlbEV4cHJlc3Npb25JbmZvOiB7CiAgICAgICAgICAgIGV4cHJlc3Npb246ICIkZmVhdHVyZS5tdW5pY2lwaW8iCiAgICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIHZhciBhbGVydFJlbmRlcmVyID0gewogICAgICAgICAgICB0eXBlOiAic2ltcGxlIiwKICAgICAgICAgICAgc3ltYm9sOiB7CiAgICAgICAgICAgIHR5cGU6ICJwaWN0dXJlLW1hcmtlciIsCiAgICAgICAgICAgIHVybDogImh0dHBzOi8vaW1hZ2UuZmxhdGljb24uY29tL2ljb25zL3N2Zy81OTkvNTk5NTA2LnN2ZyIsCiAgICAgICAgICAgIHdpZHRoOiAiMjVweCIsCiAgICAgICAgICAgIGhlaWdodDogIjI1cHgiCiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgCiAgICAgICAgdmFyIGFsZXJ0UG9wdXAgPSB7CiAgICAgICAgICAgICJ0aXRsZSI6ICJ7dGhyZWF0fSIsCiAgICAgICAgICAgICJjb250ZW50IjogIjxiPlViaWNhY2nDs246PC9iPiB7bG9jYXRpb259PGJyPjxiPk5pdmVsIGRlIFJpZXNnbzo8L2I+IHtsZXZlbH08YnI+PGI+RmVjaGE6PC9iPiB7ZGF0ZX0iCiAgICAgICAgfQoKICAgICAgICB2YXIgbXVuaWNpcGlvcyA9IG5ldyBGZWF0dXJlTGF5ZXIoewogICAgICAgICAgICB1cmw6ICJodHRwczovL3NlcnZpY2VzNy5hcmNnaXMuY29tL0FHT3BtMEFPa05UY3F4cWEvYXJjZ2lzL3Jlc3Qvc2VydmljZXMvbXVuaWNpcGlvc19zdWJyZWdpb25fY2hvY28vRmVhdHVyZVNlcnZlci8wIiwKICAgICAgICAgICAgcmVuZGVyZXI6IG11bmljaXBpb3NSZW5kZXJlciwKICAgICAgICAgICAgbGFiZWxpbmdJbmZvOiBtdW5pY2lwaW9zTGFiZWxzLAogICAgICAgICAgICBpZDogJ211bmljaXBpb3MnCiAgICAgICAgfSk7CgogICAgICAgIG1hcC5hZGQobXVuaWNpcGlvcyk7ICAKCiAgICAgICAgdmFyIGFsZXJ0YXM9IG5ldyBGZWF0dXJlTGF5ZXIoewogICAgICAgICAgICB1cmw6ICJodHRwczovL3NlcnZpY2VzNy5hcmNnaXMuY29tL0FHT3BtMEFPa05UY3F4cWEvYXJjZ2lzL3Jlc3Qvc2VydmljZXMvYWxlcnRhc19zdWJyZWdpb25fY2hvY29fZWplbXBsby9GZWF0dXJlU2VydmVyLzAiLAogICAgICAgICAgICByZW5kZXJlcjogYWxlcnRSZW5kZXJlciwKICAgICAgICAgICAgb3V0RmllbGRzOiBbInRocmVhdCIsICJsb2NhdGlvbiIsICJsZXZlbCIsICJkYXRlIiwgIk9CSkVDVElEIl0sCiAgICAgICAgICAgIHBvcHVwVGVtcGxhdGU6IGFsZXJ0UG9wdXAsCiAgICAgICAgICAgIGlkOiAnYWxlcnRhcycKICAgICAgICB9KTsKCiAgICAgICAgbWFwLmFkZChhbGVydGFzKTsgCgogICAgICAgIHRoaXMudmlldy5tYXAuZmluZExheWVyQnlJZCgnbXVuaWNpcGlvcycpLnZpc2libGUgPSBmYWxzZTsKCiAgICAgICAgIC8qCiAgICAgICAgIHRoaXMudmlldy53aGVuTGF5ZXJWaWV3KGFsZXJ0YXMpLnRoZW4oZnVuY3Rpb24obGF5ZXJWaWV3KXsKICAgICAgICAgICAgICAgIGxheWVyVmlldy53YXRjaCgidXBkYXRpbmciLCBmdW5jdGlvbih2YWx1ZSl7CiAgICAgICAgICAgICAgICAgICAgLy8gYXZhaWxhYmxlRmllbGRzIHdpbGwgYmVjb21lIGF2YWlsYWJsZQogICAgICAgICAgICAgICAgICAgIC8vIG9uY2UgdGhlIGxheWVyIHZpZXcgZmluaXNoZXMgdXBkYXRpbmcKICAgICAgICAgICAgICAgICAgICBpZiAoIXZhbHVlKSB7CiAgICAgICAgICAgICAgICAgICAgbGF5ZXJWaWV3LnF1ZXJ5RmVhdHVyZXMoewogICAgICAgICAgICAgICAgICAgICAgICBvdXRGaWVsZHM6IGxheWVyVmlldy5hdmFpbGFibGVGaWVsZHMsCiAgICAgICAgICAgICAgICAgICAgICAgIHdoZXJlOiAiT0JKRUNUSUQgPiAwIgogICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24ocmVzdWx0cykgewogICAgICAgICAgICAgICAgICAgICAgICAvL3RoaXMuZmVhdHVyZXMgPSByZXN1bHRzLmZlYXR1cmVzCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCJmZWF0dXJlcyBsZW5ndGggaXMgIiArIHJlc3VsdHMuZmVhdHVyZXMubGVuZ3RoKQogICAgICAgICAgICAgICAgICAgICAgICAvL3ZhciAgc29ydGVkRGVzY2VuZGluZyA9IHJlc3VsdHMuZmVhdHVyZXMuc29ydCgoYSwgYikgPT4gbmV3IERhdGUoYS5kYXRlKSAtIG5ldyBEYXRlKGIuZGF0ZSkpLnJldmVyc2UoKTsgCiAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgICAgICAuY2F0Y2goZnVuY3Rpb24oZXJyb3IpIHsKICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coInF1ZXJ5IGZhaWxlZDogIiwgZXJyb3IpOwogICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9KTsKICAgICAgICAgICovCiAgICAgICAgfSk7ICAgICAgIAogICAgICB9CiAgfSwKICBtb3VudGVkKCkgewogICAgdGhpcy5kcmF3TWFwKCkKICAgIC8vdGhpcy5zYXZlQWxlcnRzKGFsZXJ0cykKICB9LAogIGJlZm9yZURlc3Ryb3koKSB7CiAgICBpZiAodGhpcy52aWV3KSB7CiAgICAgIC8vIGRlc3Ryb3kgdGhlIG1hcCB2aWV3CiAgICAgIHRoaXMudmlldy5jb250YWluZXIgPSBudWxsOwogICAgfQogIH0KfTsKCg=="},{"version":3,"sources":["WebMap.vue"],"names":[],"mappings":";;;;;;;;;AASA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"WebMap.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n  <b-button id=\"municipiosButton\"  squared :pressed.sync=\"municipiosVisible\" variant=\"dark\"> {{ setButtonText() }}  </b-button>\n  <div id=\"mapDiv\">\n  </div>\n  </div>\n</template>\n\n<script>\nimport { loadModules } from 'esri-loader';\nimport { mapState } from 'vuex'\nimport { BButton } from 'bootstrap-vue'\n\nexport default {\n  name: 'web-map',\n  components: { BButton },\n  data() { return { municipiosVisible: true }},\n  computed: mapState(['mapCenter']),\n  watch: {\n    mapCenter(newValue) {\n      //console.log(`WebMap: Updating from ${oldValue[0] + \" \" + oldValue[1]} to ${newValue[0] + \" \" + newValue[1]}`);\n      this.gotTo(newValue)\n    },\n    municipiosVisible() {\n      this.view.map.findLayerById('municipios').visible = !this.view.map.findLayerById('municipios').visible\n    }\n  },\n  methods: {\n      setButtonText() {\n        return this.municipiosVisible ? \"Mostrar municipios PDET\" : \"Ocultar municipios PDET\" \n      },\n      gotTo(pt) {\n        var opts = {\n          duration: 1000  // Duration of animation will be 1 seconds\n        };\n\n        // go to point at LOD 15 with custom duration\n        this.view.goTo({\n          target: pt,\n          zoom: 10\n        }, opts);\n      },\n      drawMap()\n      {\n            // lazy load the required ArcGIS API for JavaScript modules and CSS\n        loadModules(['esri/Map', 'esri/views/MapView', 'esri/layers/FeatureLayer'], { css: true })\n        .then(([ArcGISMap, MapView, FeatureLayer]) => {\n\n        const map = new ArcGISMap({\n        basemap: 'dark-gray-vector'\n        });\n\n        this.view = new MapView({\n        container: \"mapDiv\",\n        map: map,\n        center: [-76.781506677246, 5.9944065844109957], // longitude, latitude\n        zoom: 6\n        });\n\n        var municipiosRenderer = {\n            type: \"simple\",\n            symbol: {\n                    type: \"picture-marker\",\n                    url: \"https://image.flaticon.com/icons/png/512/1001/1001022.png\",\n                    width: \"18px\",\n                    height: \"18px\"\n            }\n        }\n\n        var municipiosLabels = {\n            symbol: {\n            type: \"text\",\n            color: \"#FFFFF\",\n            haloColor: \"#ff0000\",\n            haloSize: \"0px\",\n            font: {\n                size: \"12px\",\n                family: \"Noto Sans\",\n                style: \"italic\",\n                weight: \"normal\"\n            }\n            },\n            labelPlacement: \"below-center\",\n            labelExpressionInfo: {\n            expression: \"$feature.municipio\"\n            }\n        }\n\n        var alertRenderer = {\n            type: \"simple\",\n            symbol: {\n            type: \"picture-marker\",\n            url: \"https://image.flaticon.com/icons/svg/599/599506.svg\",\n            width: \"25px\",\n            height: \"25px\"\n            }\n        }\n        \n        var alertPopup = {\n            \"title\": \"{threat}\",\n            \"content\": \"<b>Ubicación:</b> {location}<br><b>Nivel de Riesgo:</b> {level}<br><b>Fecha:</b> {date}\"\n        }\n\n        var municipios = new FeatureLayer({\n            url: \"https://services7.arcgis.com/AGOpm0AOkNTcqxqa/arcgis/rest/services/municipios_subregion_choco/FeatureServer/0\",\n            renderer: municipiosRenderer,\n            labelingInfo: municipiosLabels,\n            id: 'municipios'\n        });\n\n        map.add(municipios);  \n\n        var alertas= new FeatureLayer({\n            url: \"https://services7.arcgis.com/AGOpm0AOkNTcqxqa/arcgis/rest/services/alertas_subregion_choco_ejemplo/FeatureServer/0\",\n            renderer: alertRenderer,\n            outFields: [\"threat\", \"location\", \"level\", \"date\", \"OBJECTID\"],\n            popupTemplate: alertPopup,\n            id: 'alertas'\n        });\n\n        map.add(alertas); \n\n        this.view.map.findLayerById('municipios').visible = false;\n\n         /*\n         this.view.whenLayerView(alertas).then(function(layerView){\n                layerView.watch(\"updating\", function(value){\n                    // availableFields will become available\n                    // once the layer view finishes updating\n                    if (!value) {\n                    layerView.queryFeatures({\n                        outFields: layerView.availableFields,\n                        where: \"OBJECTID > 0\"\n                    })\n                    .then(function(results) {\n                        //this.features = results.features\n                        console.log(\"features length is \" + results.features.length)\n                        //var  sortedDescending = results.features.sort((a, b) => new Date(a.date) - new Date(b.date)).reverse(); \n                    })\n                    .catch(function(error) {\n                        console.log(\"query failed: \", error);\n                    });\n                    }\n                });\n            });\n          */\n        });       \n      }\n  },\n  mounted() {\n    this.drawMap()\n    //this.saveAlerts(alerts)\n  },\n  beforeDestroy() {\n    if (this.view) {\n      // destroy the map view\n      this.view.container = null;\n    }\n  }\n};\n\n</script>\n\n<style scoped>\n#municipiosButton {\n  padding: 0;\n  margin: 1px;\n  width: 100%;\n  height: 50px;\n}\n#mapDiv {\n  padding: 0;\n  margin: 1px;\n  width: 100%;\n  height: 750px;\n}\n</style>"]}]}