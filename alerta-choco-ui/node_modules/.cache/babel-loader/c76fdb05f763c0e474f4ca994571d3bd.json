{"remainingRequest":"/Users/chumbimbi/Desktop/Proyectos/AlertaChoco/alerta-choco-ui/node_modules/thread-loader/dist/cjs.js!/Users/chumbimbi/Desktop/Proyectos/AlertaChoco/alerta-choco-ui/node_modules/babel-loader/lib/index.js!/Users/chumbimbi/Desktop/Proyectos/AlertaChoco/alerta-choco-ui/node_modules/eslint-loader/index.js??ref--13-0!/Users/chumbimbi/Desktop/Proyectos/AlertaChoco/alerta-choco-ui/src/services/axios-handler.js","dependencies":[{"path":"/Users/chumbimbi/Desktop/Proyectos/AlertaChoco/alerta-choco-ui/src/services/axios-handler.js","mtime":1589249047605},{"path":"/Users/chumbimbi/Desktop/Proyectos/AlertaChoco/alerta-choco-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chumbimbi/Desktop/Proyectos/AlertaChoco/alerta-choco-ui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chumbimbi/Desktop/Proyectos/AlertaChoco/alerta-choco-ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/chumbimbi/Desktop/Proyectos/AlertaChoco/alerta-choco-ui/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL2NodW1iaW1iaS9EZXNrdG9wL1Byb3llY3Rvcy9BbGVydGFDaG9jby9hbGVydGEtY2hvY28tdWkvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgX2NsYXNzQ2FsbENoZWNrIGZyb20gIi9Vc2Vycy9jaHVtYmltYmkvRGVza3RvcC9Qcm95ZWN0b3MvQWxlcnRhQ2hvY28vYWxlcnRhLWNob2NvLXVpL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVjayI7CmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSAiL1VzZXJzL2NodW1iaW1iaS9EZXNrdG9wL1Byb3llY3Rvcy9BbGVydGFDaG9jby9hbGVydGEtY2hvY28tdWkvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzIjsKaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKZXhwb3J0IHZhciBBeGlvc0hhbmRsZXIgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIGZ1bmN0aW9uIEF4aW9zSGFuZGxlcigpIHsKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBBeGlvc0hhbmRsZXIpOwogIH0KCiAgX2NyZWF0ZUNsYXNzKEF4aW9zSGFuZGxlciwgW3sKICAgIGtleTogImdldFJlcXVlc3QiLAogICAgdmFsdWU6IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIF9nZXRSZXF1ZXN0ID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKHVybCkgewogICAgICAgIHZhciBwYXJhbXMsCiAgICAgICAgICAgIHJlc3BvbnNlLAogICAgICAgICAgICBfYXJncyA9IGFyZ3VtZW50czsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBwYXJhbXMgPSBfYXJncy5sZW5ndGggPiAxICYmIF9hcmdzWzFdICE9PSB1bmRlZmluZWQgPyBfYXJnc1sxXSA6IHt9OwogICAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDE7CgogICAgICAgICAgICAgICAgdGhpcy5fY2FuY2VsUHJldmlvdXNSZXF1ZXN0KHVybCk7CgogICAgICAgICAgICAgICAgdGhpcy5fdHJhY2tDdXJyZW50UmVxdWVzdCh1cmwpOwoKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA2OwogICAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zLmdldCh1cmwsIE9iamVjdC5hc3NpZ24oe30sIHBhcmFtcywgewogICAgICAgICAgICAgICAgICBjYW5jZWxUb2tlbjogdGhpcy5jYW5jZWxUb2tlbi50b2tlbgogICAgICAgICAgICAgICAgfSkpOwoKICAgICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCByZXNwb25zZS5kYXRhICYmIHJlc3BvbnNlLmRhdGEuaXRlbXMgPyByZXNwb25zZS5kYXRhLml0ZW1zIDogcmVzcG9uc2UuZGF0YSk7CgogICAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMTA7CiAgICAgICAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDEpOwoKICAgICAgICAgICAgICAgIGlmICghYXhpb3MuaXNDYW5jZWwoX2NvbnRleHQudDApKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxNTsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDE2OwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgMTU6CiAgICAgICAgICAgICAgICB0aHJvdyBfY29udGV4dC50MDsKCiAgICAgICAgICAgICAgY2FzZSAxNjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUsIHRoaXMsIFtbMSwgMTBdXSk7CiAgICAgIH0pKTsKCiAgICAgIGZ1bmN0aW9uIGdldFJlcXVlc3QoX3gpIHsKICAgICAgICByZXR1cm4gX2dldFJlcXVlc3QuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgfQoKICAgICAgcmV0dXJuIGdldFJlcXVlc3Q7CiAgICB9KCkKICB9LCB7CiAgICBrZXk6ICJwb3N0UmVxdWVzdCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gKCkgewogICAgICB2YXIgX3Bvc3RSZXF1ZXN0ID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMih1cmwsIHBheWxvYWQpIHsKICAgICAgICB2YXIgcGFyYW1zLAogICAgICAgICAgICByZXNwb25zZSwKICAgICAgICAgICAgX2FyZ3MyID0gYXJndW1lbnRzOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBwYXJhbXMgPSBfYXJnczIubGVuZ3RoID4gMiAmJiBfYXJnczJbMl0gIT09IHVuZGVmaW5lZCA/IF9hcmdzMlsyXSA6IHt9OwogICAgICAgICAgICAgICAgX2NvbnRleHQyLnByZXYgPSAxOwogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA0OwogICAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zLnBvc3QodXJsLCBwYXlsb2FkLCBPYmplY3QuYXNzaWduKHt9LCBwYXJhbXMpKTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuYWJydXB0KCJyZXR1cm4iLCByZXNwb25zZS5kYXRhICYmIHJlc3BvbnNlLmRhdGEuaXRlbXMgPyByZXNwb25zZS5kYXRhLml0ZW1zIDogcmVzcG9uc2UuZGF0YSk7CgogICAgICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5wcmV2ID0gODsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi50MCA9IF9jb250ZXh0MlsiY2F0Y2giXSgxKTsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdFUlJPUiAnICsgX2NvbnRleHQyLnQwKTsKCiAgICAgICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMiwgbnVsbCwgW1sxLCA4XV0pOwogICAgICB9KSk7CgogICAgICBmdW5jdGlvbiBwb3N0UmVxdWVzdChfeDIsIF94MykgewogICAgICAgIHJldHVybiBfcG9zdFJlcXVlc3QuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgfQoKICAgICAgcmV0dXJuIHBvc3RSZXF1ZXN0OwogICAgfSgpCiAgfV0pOwoKICByZXR1cm4gQXhpb3NIYW5kbGVyOwp9KCk7"},{"version":3,"sources":["/Users/chumbimbi/Desktop/Proyectos/AlertaChoco/alerta-choco-ui/src/services/axios-handler.js"],"names":["axios","AxiosHandler","url","params","_cancelPreviousRequest","_trackCurrentRequest","get","Object","assign","cancelToken","token","response","data","items","isCancel","payload","post","console","log"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,WAAaC,YAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,iGACoBC,GADpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACyBC,gBAAAA,MADzB,2DACkC,EADlC;AAAA;;AAGM,qBAAKC,sBAAL,CAA4BF,GAA5B;;AACA,qBAAKG,oBAAL,CAA0BH,GAA1B;;AAJN;AAAA,uBAM6BF,KAAK,CAACM,GAAN,CAAUJ,GAAV,EAAeK,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,MAAlB,EAA0B;AAAEM,kBAAAA,WAAW,EAAE,KAAKA,WAAL,CAAiBC;AAAhC,iBAA1B,CAAf,CAN7B;;AAAA;AAMYC,gBAAAA,QANZ;AAAA,iDAOcA,QAAQ,CAACC,IAAT,IAAiBD,QAAQ,CAACC,IAAT,CAAcC,KAAhC,GAAyCF,QAAQ,CAACC,IAAT,CAAcC,KAAvD,GAA+DF,QAAQ,CAACC,IAPrF;;AAAA;AAAA;AAAA;;AAAA,qBASUZ,KAAK,CAACc,QAAN,aATV;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mGAgBqBZ,GAhBrB,EAgB0Ba,OAhB1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBmCZ,gBAAAA,MAhBnC,8DAgB4C,EAhB5C;AAAA;AAAA;AAAA,uBAmB6BH,KAAK,CAACgB,IAAN,CAAWd,GAAX,EAAgBa,OAAhB,EAAyBR,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,MAAlB,CAAzB,CAnB7B;;AAAA;AAmBYQ,gBAAAA,QAnBZ;AAAA,kDAqBcA,QAAQ,CAACC,IAAT,IAAiBD,QAAQ,CAACC,IAAT,CAAcC,KAAhC,GAAyCF,QAAQ,CAACC,IAAT,CAAcC,KAAvD,GAA+DF,QAAQ,CAACC,IArBrF;;AAAA;AAAA;AAAA;AAwBQK,gBAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;;AAxBR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA","sourcesContent":["import axios from 'axios'\n\nexport class AxiosHandler {\n  async getRequest (url, params = {}) {\n    try {\n      this._cancelPreviousRequest(url)\n      this._trackCurrentRequest(url)\n\n      const response = await axios.get(url, Object.assign({}, params, { cancelToken: this.cancelToken.token }))\n      return (response.data && response.data.items) ? response.data.items : response.data\n    } catch (error) {\n      if (axios.isCancel(error)) {\n        // Request was cancelled. No further action required\n      } else\n        throw error\n    }\n  }\n\n  async postRequest (url, payload, params = {}) {\n    try {\n\n      const response = await axios.post(url, payload, Object.assign({}, params))\n\n      return (response.data && response.data.items) ? response.data.items : response.data\n      \n    } catch (error) {\n        console.log('ERROR ' + error)\n    }\n  }\n}\n"]}]}